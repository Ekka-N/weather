{"version":3,"sources":["components/Form/Form.js","components/Weather/Weather.js","components/App/App.js","index.js"],"names":["Form","className","type","name","id","placeholder","onClick","this","props","getWeater","React","Component","Weather","info","city","Math","round","temp","sunrise","sunset","API_KEY","App","state","undefined","country","error","event","a","preventDefault","document","getElementById","value","fetch","url","json","data","console","log","sys","sunriseDate","Date","setTime","resultSunrise","getHours","getMinutes","getSeconds","sunsetDate","resultSunset","newInfo","main","setState","ReactDOM","render","StrictMode"],"mappings":"2SAceA,G,6KATX,OACE,0BAAMC,UAAU,cACZ,2BAAOA,UAAU,QAAQC,KAAK,OAAOC,KAAK,OAAOC,GAAG,QAAQC,YAAY,mCACxE,4BAASJ,UAAU,SAASK,QAASC,KAAKC,MAAMC,WAAhD,8F,GALSC,IAAMC,YCiBVC,G,6KAfX,OACE,6BACIL,KAAKC,MAAMK,KAAKC,MAClB,6BACI,uBAAGb,UAAU,6BAAb,mCAAiDM,KAAKC,MAAMK,KAAKC,MACjE,uBAAGb,UAAU,gBAAb,uEAA0Cc,KAAKC,MAAMT,KAAKC,MAAMK,KAAKI,MAAQ,IAA7E,UACA,uBAAGhB,UAAU,gBAAb,8EAA4CM,KAAKC,MAAMK,KAAKK,SAC5D,uBAAGjB,UAAU,gBAAb,wEAA2CM,KAAKC,MAAMK,KAAKM,c,GATjDT,IAAMC,YCEtBS,G,MAAU,oCAiEDC,E,4MA7DbC,MAAQ,CACNT,KAAM,CACJI,UAAMM,EACNT,UAAMS,EACNC,aAASD,EACTL,aAASK,EACTJ,YAAQI,EACRE,WAAOF,I,EAIXd,U,uCAAY,WAAOiB,GAAP,iCAAAC,EAAA,yDACVD,EAAME,mBACAd,EAAOe,SAASC,eAAe,SAASC,OAFpC,iCAKUC,MAAM,qDAAD,OAAsDlB,EAAtD,kBAAoEM,IALnF,cAKFa,EALE,gBAMWA,EAAIC,OANf,OAMFC,EANE,OAORC,QAAQC,IAAIF,GAENjB,EAAUiB,EAAKG,IAAIpB,SACnBqB,EAAc,IAAIC,MACZC,QAAQvB,GACdwB,EAAgBH,EAAYI,WAAa,IAAMJ,EAAYK,aAAe,IAAML,EAAYM,aAE5F1B,EAASgB,EAAKG,IAAInB,QAClB2B,EAAa,IAAIN,MACZC,QAAQtB,GACb4B,EAAeD,EAAWH,WAAa,IAAMG,EAAWF,aAAe,IAAME,EAAWD,aAExFG,EAAU,CACd/B,KAAMkB,EAAKc,KAAKhC,KAChBH,KAAMqB,EAAKhC,KACXqB,QAASW,EAAKG,IAAId,QAClBN,QAASwB,EACTvB,OAAQ4B,EACRtB,MAAO,IAET,EAAKyB,SAAS,CAACrC,KAAK,eAAKmC,KA3BjB,4C,6GAiCV,OACE,yBAAK/C,UAAU,aACb,wBAAIA,UAAU,SAAd,gHAEE,uBAAGA,UAAU,YAAb,oJAIJ,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAMQ,UAAWF,KAAKE,YACtB,kBAAC,EAAD,CAASI,KAAMN,KAAKe,MAAMT,a,GAxDhBH,IAAMC,WCHxBwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxB,SAASC,eAAe,W","file":"static/js/main.f2d77b6d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Form.scss'\r\n\r\nclass Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <form className=\"Form__wrap\">\r\n          <input className=\"input\" type=\"text\" name=\"city\" id=\"input\" placeholder=\"Город\"></input>\r\n          <button  className=\"button\" onClick={this.props.getWeater}>Получить погоду</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\nimport './Weather.scss'\r\n\r\nclass Weather extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        { this.props.info.city && \r\n        <div>\r\n            <p className=\"Weater__text Weater__city\">Город: {this.props.info.city}</p>\r\n            <p className=\"Weater__text\">Температура: {Math.round(this.props.info.temp) - 273}℃</p>\r\n            <p className=\"Weater__text\">Время восхода: {this.props.info.sunrise}</p>\r\n            <p className=\"Weater__text\">Время заката: {this.props.info.sunset}</p>\r\n        </div>           \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\nimport Form from '../Form/Form'\nimport Weather from '../Weather/Weather'\nimport './App.scss'\n\nconst API_KEY = '290053f8c007bce07e5d9bac79cba03d';\n\nclass App extends React.Component {\n\n  state = {\n    info: {      \n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    }\n  }\n\n  getWeater = async (event) => {\n    event.preventDefault();\n    const city = document.getElementById('input').value;\n\n    if (city) {      \n      const url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n      const data = await url.json();\n      console.log(data);\n\n      const sunrise = data.sys.sunrise;\n      const sunriseDate = new Date();\n      sunriseDate.setTime(sunrise);\n      const resultSunrise = sunriseDate.getHours() + \":\" + sunriseDate.getMinutes() + \":\" + sunriseDate.getSeconds();\n\n      const sunset = data.sys.sunset;\n      const sunsetDate = new Date();\n      sunsetDate.setTime(sunset);\n      const resultSunset = sunsetDate.getHours() + \":\" + sunsetDate.getMinutes() + \":\" + sunsetDate.getSeconds();\n\n      const newInfo = {\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        sunrise: resultSunrise,\n        sunset: resultSunset,\n        error: ''\n      }\n      this.setState({info: {...newInfo}});\n    } \n    \n  }\n\n  render() {\n    return (\n      <div className=\"App__wrap\">\n        <h1 className=\"title\">\n          Погодное приложение\n          <p className=\"subtitle\">\n            Узнай погоду в любом городе!\n          </p>\n        </h1>\n      <div className=\"App__content\"> \n        <Form getWeater={this.getWeater}/>\n        <Weather info={this.state.info} />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}